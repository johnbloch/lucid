/* 
  The static forwarder, modified to 
  not reflect packets out of the 
  same port that they entered from. 

  differential specification:
    # if the packet from static_fwd had an 
    # egress port equal to its ingress port, 
    # then the packet from static_fwd_noloop
    # should have egress_port equal to CONTROL_PORT
      (old_out.ingress_port == old_out.egress_port)
        => new_out.egress_port == CONTROL_PORT
    # (implicit: nothing else should have changed)

*/

type port = int<16>

// EXTERNAL_PORT is where Internet traffic 
// comes from / goes to,
// all other ports are connected to local devices
const port EXTERNAL_PORT = 10;
const port CONTROL_PORT = 20;

// static forwarding table
// one entry for each local device
fun port fwd_table(int dst) {
  match dst with 
  | 100 -> {return 1;}
  | 200 -> {return 2;}
  | 300 -> {return 3;}
  | 400 -> {return 4;} 
  | _   -> {return EXTERNAL_PORT;}
}

event pkt(int src, int dst, int sport, int dport) {
    if(dst == 100){
        return 0;
    }else{
        return 1;
    }
}